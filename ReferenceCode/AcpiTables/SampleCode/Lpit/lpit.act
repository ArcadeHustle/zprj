/*++
  This file contains an 'Intel Peripheral Driver' and is
  licensed for Intel CPUs and chipsets under the terms of your
  license agreement with Intel or your vendor.  This file may
  be modified by the user, subject to additional terms of the
  license agreement
  --*/
/*++

Copyright (c) 2013 Intel Corporation. All rights reserved
This software and associated documentation (if any) is furnished
under a license and may only be used or copied in accordance
with the terms of the license. Except as permitted by such
license, no part of this software or documentation may be
reproduced, stored in a retrieval system, or transmitted in any
form or by any means without the express written consent of
Intel Corporation.


Module Name:

Lpit.act

Abstract:

This file contains a structure definition for the ACPI Low Power Idle Table
(LPIT).  The contents of this file should only be modified 
for bug fixes, no porting is required.  The table layout is defined in 
LowPowerIdleTable.h and the table contents are defined in Lpit.h.

--*/

   //
   // Statements that include other files
   //

#include "Lpit.h"

   //
   // Low Power Idle Table
   // Please modify all values in Lpit.h only.
   //

EFI_ACPI_LOW_POWER_IDLE_TABLE Lpit = {

  //
  // Header
  //


  EFI_ACPI_LOW_POWER_IDLE_TABLE_SIGNATURE,
  sizeof (EFI_ACPI_LOW_POWER_IDLE_TABLE),
  EFI_ACPI_LOW_POWER_IDLE_TABLE_REVISION ,

  //
  // Checksum will be updated at runtime
  //
  0x00,

  //
  // It is expected that these values will be updated at runtime
  //
  'A', 'L', 'A', 'S', 'K', 'A',

  0,
  EFI_ACPI_OEM_LPIT_REVISION,
  EFI_ACPI_CREATER_ID,
  EFI_ACPI_CREATER_REVISION,



  //
  // Descriptor
  //      
  {
    {
      EFI_ACPI_LOW_POWER_IDLE_MWAIT_TYPE,
      sizeof(EFI_ACPI_MWAIT_LPI_STATE_DESCRIPTOR),
      EFI_ACPI_HSW_LPI_AUDIO_ID,
      {0,0},
      {EFI_ACPI_LOW_POWER_IDLE_DEFAULT_FLAG},   // Flags 
      EFI_ACPI_HSW_LPI_TRIGGER, //EntryTrigger
      EFI_ACPI_HSW_LPI_MIN_RES, //Residency
      EFI_ACPI_HSW_LPI_LATENCY, //Latency
      EFI_ACPI_HSW_LPI_RES_COUNTER, //ResidencyCounter
      EFI_ACPI_LOW_POWER_IDLE_RES_FREQ_TSC //Residency counter frequency
    },
    {
      EFI_ACPI_LOW_POWER_IDLE_MWAIT_TYPE,
      sizeof(EFI_ACPI_MWAIT_LPI_STATE_DESCRIPTOR),
      EFI_ACPI_HSW_LPI_CS_ID,
      {0,0},
      {EFI_ACPI_LOW_POWER_IDLE_DEFAULT_FLAG},   // Flags 
      EFI_ACPI_HSW_LPI_TRIGGER, //EntryTrigger
      EFI_ACPI_HSW_LPI_MIN_RES, //Residency
      EFI_ACPI_HSW_LPI_LATENCY, //Latency
      EFI_ACPI_HSW_LPI_RES_COUNTER, //ResidencyCounter
      EFI_ACPI_LOW_POWER_IDLE_RES_FREQ_TSC //Residency counter frequency
    }
  }

};

VOID
main (
      VOID
      )

{
}