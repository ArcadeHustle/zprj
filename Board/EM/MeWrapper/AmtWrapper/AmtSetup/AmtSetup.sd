//*************************************************************************
//*************************************************************************
//**                                                                     **
//**        (C)Copyright 1985-2010, American Megatrends, Inc.            **
//**                                                                     **
//**                       All Rights Reserved.                          **
//**                                                                     **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093           **
//**                                                                     **
//**                       Phone: (770)-246-8600                         **
//**                                                                     **
//*************************************************************************
//*************************************************************************
//**********************************************************************
// $Header: /Alaska/SOURCE/Modules/SharkBayRefCodes/ME/AmtWrapper/AmtSetup/AmtSetup.sd 5     9/24/15 3:04a Tristinchou $
//
// $Revision: 5 $
//
// $Date: 9/24/15 3:04a $
//**********************************************************************
// Revision History
// ----------------
// $Log: /Alaska/SOURCE/Modules/SharkBayRefCodes/ME/AmtWrapper/AmtSetup/AmtSetup.sd $
// 
// 5     9/24/15 3:04a Tristinchou
// [TAG]  		EIP238392
// [Category]  	Improvement
// [Description]  	Change USB Provisioning default to disable
// 
// 4     8/02/13 5:02a Klzhan
// [TAG]  		EIP131372
// [Category]  	Improvement
// [Description]  	Fix build error when disable AT_SUPPORT
// 
// 3     11/06/12 7:13a Klzhan
// Pass SharkBay AT test.
// 
// 2     4/24/12 12:38a Klzhan
// Update modulepart to latest
// 
// 1     2/08/12 1:08a Klzhan
// Initial Check in 
// 
// 3     7/14/11 7:45a Klzhan
// Add "Disable ME" setup item.
// 
// 2     5/19/11 5:30a Klzhan
// Remove un-use AMT setup item.
// 
// 1     2/25/11 1:44a Klzhan
// Initial Check-in
// 
// 1     12/03/10 5:11a Klzhan
// Initial Check-in.
//
//**********************************************************************

//<AMI_FHDR_START>
//---------------------------------------------------------------------------
// Name:		AMTSetup.sd
//
// Description:	AMT TSE sd file.
//
//---------------------------------------------------------------------------
//<AMI_FHDR_END>
#ifdef SETUP_DATA_DEFINITION
/***********************************************************/
/* Put NVRAM data definitions here.
/* For example: UINT8 Data1;
/* These definitions will be converted by the build process
/* to a definitions of SETUP_DATA fields.
/***********************************************************/
  //
  // Intel AMT
  //
  UINT8         Amt;
  UINT8         AmtbxPrompt;
  UINT8         AmtbxHotKeyPressed;
  UINT8         AmtbxSelectionScreen;
  UINT8         FWVerbose;
  UINT8         HideUnConfigureMeConfirm;
  UINT8		MebxDebugMsg;
  UINT8         UnConfigureMe;
  UINT8         AmtSpiLock;
  UINT16        AmtWaitTimer;
  UINT8         AmtCiraRequest;
  UINT8         AmtCiraTimeout;
  UINT8         USBProvision; 
  UINT8         FWProgress;
  UINT8         MEDisabled;
  //
  // ASF
  //
  UINT8         Asf;

  //
  // WatchDog
  //
  UINT8         WatchDog;
  UINT16        WatchDogTimerOs;
  UINT16        WatchDogTimerBios;

#endif

//---------------------------------------------------------------------------
#if defined(VFRCOMPILE) && !defined(CONTROLS_ARE_DEFINED)
#define CONTROL_DEFINITION
#endif
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
#ifdef CONTROL_DEFINITION

#define AMT_ONEOF_AMT\
    oneof varid = SETUP_DATA.Amt,\
        prompt   = STRING_TOKEN(STR_AMT_PROMPT),\
        help     = STRING_TOKEN(STR_AMT_HELP),\
        option text = STRING_TOKEN(STR_DISABLED), value = 0, flags =  RESET_REQUIRED, key = 0;\
        option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED, key = 0;\
    endoneof;


#define AMT_CHECKBOX_AMTBX_HOTKEYPRESSED\
      checkbox varid  = SETUP_DATA.AmtbxHotKeyPressed,\
             prompt   = STRING_TOKEN(STR_AMTBX_HOTKEY_PRESSED_PROMPT),\
             help     = STRING_TOKEN(STR_AMTBX_HOTKEY_PRESSED_HELP),\
             flags    = 0 | RESET_REQUIRED,\
             key      = 0,\
      endcheckbox;

#define AMT_CHECKBOX_AMTBX_SELECTSECTION\
      checkbox varid  = SETUP_DATA.AmtbxSelectionScreen,\
             prompt   = STRING_TOKEN(STR_AMTBX_SELECTION_SCREEN_PROMPT),\
             help     = STRING_TOKEN(STR_AMTBX_SELECTION_SCREEN_HELP),\
             flags    = 0 | RESET_REQUIRED,\
             key      = 0,\
      endcheckbox; 


#define AMT_CHECKBOX_HIDEUNCONFIGUREDMECONFIRM\
      checkbox varid  = SETUP_DATA.HideUnConfigureMeConfirm,\
             prompt   = STRING_TOKEN(STR_AMT_HIDE_CONFIRMATION_UNCONFIGURE_ME_PROMPT),\
             help     = STRING_TOKEN(STR_AMT_HIDE_CONFIRMATION_UNCONFIGURE_ME_HELP),\
             flags    = 0 | RESET_REQUIRED,\
             key      = 0,\
      endcheckbox;

#define AMT_CHECKBOX_MEBX_DEBUGMSG\
      checkbox varid  = SETUP_DATA.MebxDebugMsg,\
             prompt   = STRING_TOKEN(STR_AMT_MEBX_DEBUG_MSG_PROMPT),\
             help     = STRING_TOKEN(STR_AMT_MEBX_DEBUG_MSG_HELP),\
             flags    = 0 | RESET_REQUIRED,\
             key      = 0,\
      endcheckbox; 

#define AMT_CHECKBOX_UNCONFIGUREME\
      checkbox varid  = SETUP_DATA.UnConfigureMe,\
             prompt   = STRING_TOKEN(STR_AMT_UNCONFIGURE_ME_PROMPT),\
             help     = STRING_TOKEN(STR_AMT_UNCONFIGURE_ME_HELP),\
             flags    = 0 | RESET_REQUIRED,\
             key      = 0,\
      endcheckbox;
  
#define AMT_NUMERIC_AMT_WAITTIMER\
      numeric varid  = SETUP_DATA.AmtWaitTimer,\
             prompt  = STRING_TOKEN (STR_AMT_WAIT_TIMER_PROMPT),\
             help    = STRING_TOKEN (STR_AMT_WAIT_TIMER_HELP),\
             minimum = 0,\
             maximum = 65535,\
             step    = 1,\
             default = 0,\
      endnumeric;
      // Stepping of 0 equates to a manual entering
      // of a value, otherwise it will auto-increment
      // with a left/right arrow

#define AMT_ONEOF_MEDISABLED\
      oneof varid   = SETUP_DATA.MEDisabled,\
            prompt  = STRING_TOKEN(STR_SET_ME_DISABLED_PROMPT),\
            help    = STRING_TOKEN(STR_SET_ME_DISABLED_HELP),\
            option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | RESET_REQUIRED, key = 0;\
            option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = MANUFACTURING | RESET_REQUIRED, key = 0;\
      endoneof;

#define AMT_ONEOF_ASF\
      oneof varid   = SETUP_DATA.Asf,\
            prompt  = STRING_TOKEN(STR_ASF_PROMPT),\
            help    = STRING_TOKEN(STR_ASF_HELP),\
            option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED, key = 0;\
            option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED, key = 0;\
      endoneof;

#define AMT_CHECKBOX_AMT_CIRAREQUEST\
      checkbox varid  = SETUP_DATA.AmtCiraRequest,\
             prompt   = STRING_TOKEN(STR_AMT_CIRA_REQUEST_PROMPT),\
             help     = STRING_TOKEN(STR_AMT_CIRA_REQUEST_HELP),\
             flags    = 0 | RESET_REQUIRED,\
             key      = 0,\
      endcheckbox;

#define AMT_ONEOF_USB_PROVISION\
      oneof varid = SETUP_DATA.USBProvision,\
             prompt   = STRING_TOKEN(STR_AMT_USB_CONFIGURE_PROMPT),\
             help     = STRING_TOKEN(STR_AMT_USB_CONFIGURE_HELP),\
             option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED, key = 0;\
             option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED, key = 0;\
      endoneof;

#define AMT_ONEOF_FW_PROGRESS\
      oneof varid = SETUP_DATA.FWProgress,\
             prompt   = STRING_TOKEN(STR_AMT_PET_PROGRESS_PROMPT),\
             help     = STRING_TOKEN(STR_AMT_PET_PROGRESS_HELP),\
             option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = RESET_REQUIRED, key = 0;\
             option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED, key = 0;\
      endoneof;


#define AMT_NUMERIC_AMT_CIRATIMEOUT\
      numeric varid   = SETUP_DATA.AmtCiraTimeout, \
            prompt  = STRING_TOKEN (STR_AMT_CIRA_TIMEOUT_PROMPT),\
            help    = STRING_TOKEN (STR_AMT_CIRA_TIMEOUT_HELP),\
            flags   = RESET_REQUIRED,\
            minimum = 0,\
            maximum = 255,\
            step    = 1,\
            default = 0, \
      endnumeric;
      // Stepping of 0 equates to a manual entering
      // of a value, otherwise it will auto-increment
      // with a left/right arrow

#define AMT_ONEOF_WATCHDOG\
      oneof varid = SETUP_DATA.WatchDog,\
            prompt   = STRING_TOKEN(STR_WATCHDOG_PROMPT),\
            help     = STRING_TOKEN(STR_WATCHDOG_HELP),\
            option text = STRING_TOKEN(STR_DISABLED), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED, key = 0;\
            option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED, key = 0;\
      endoneof;

#define AMT_NUMERIC_WATCHDOG_TIMEROS\
      numeric varid   = SETUP_DATA.WatchDogTimerOs,\
            prompt  = STRING_TOKEN (STR_WATCHDOG_TIMER_OS_PROMPT),\
            help    = STRING_TOKEN (STR_WATCHDOG_TIMER_OS_HELP),\
            minimum = 0,\
            maximum = 65535,\
            step    = 1,\
            default = 0,\
      endnumeric;

#define AMTSETUP_NUMERIC_WATCHDOG_TIMERBIOS\
    numeric varid = SETUP_DATA.WatchDogTimerBios,\
        prompt      = STRING_TOKEN (STR_WATCHDOG_TIMER_BIOS_PROMPT),\
        help        = STRING_TOKEN (STR_WATCHDOG_TIMER_BIOS_HELP),\
        minimum     = 0,\
        maximum     = 65535,\
        step        = 1,\
        default     = 0,\
    endnumeric;

#endif // CONTROL_DEFINITION
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
#ifdef CONTROLS_WITH_DEFAULTS
    AMT_ONEOF_AMT
    AMT_CHECKBOX_AMTBX_HOTKEYPRESSED
    AMT_CHECKBOX_AMTBX_SELECTSECTION
    AMT_CHECKBOX_HIDEUNCONFIGUREDMECONFIRM
    AMT_CHECKBOX_MEBX_DEBUGMSG
    AMT_CHECKBOX_UNCONFIGUREME
    AMT_NUMERIC_AMT_WAITTIMER
    AMT_ONEOF_MEDISABLED
    AMT_ONEOF_ASF
    AMT_CHECKBOX_AMT_CIRAREQUEST
    AMT_ONEOF_USB_PROVISION
    AMT_ONEOF_FW_PROGRESS
    AMT_NUMERIC_AMT_CIRATIMEOUT
    AMT_ONEOF_WATCHDOG
    AMT_NUMERIC_WATCHDOG_TIMEROS
    AMTSETUP_NUMERIC_WATCHDOG_TIMERBIOS
#endif // CONTROLS_WITH_DEFAULTS

//**********************************************************************
//                  Advanced - ASF Configuration Form
//**********************************************************************

#ifdef ADVANCED_FORM_SET

#ifdef FORM_SET_TYPEDEF
  #include "AmtSetup.h"
  #include <MeSetup.h>
#endif

  #ifdef FORM_SET_ITEM
  // Define controls to be added to the main page of the formset

  #endif

  #ifdef FORM_SET_VARSTORE
  varstore SETUP_AMT_FEATURES,
    key   = AUTO_ID(AMT_FEATURES_ID),
    name  = SetupAmtFeatures,
    guid  = SETUP_GUID;
  #endif

  #ifdef FORM_SET_GOTO
  // Define goto commands for the forms defined in this file
    suppressif NOT ideqval SETUP_DATA.MeFirmwareInfo == NORMAL_MODE 
            AND NOT ideqval SETUP_DATA.MeFirmwareInfo == TEMP_DISABLE_MODE;
    grayoutif ideqval SETUP_AMT_FEATURES.GrayOut == 1;
      goto AMT_FORM_ID, 
        prompt  = STRING_TOKEN(STR_AMT_FORM),
        help    = STRING_TOKEN(STR_AMT_FORM_HELP);
    SUPPRESS_GRAYOUT_ENDIF  
  #endif

  #ifdef FORM_SET_FORM

  // Define forms
    #ifndef AMT_FORM_SETUP
    #define AMT_FORM_SETUP

    form formid = AUTO_ID(AMT_FORM_ID),
    title     = STRING_TOKEN(STR_AMT_FORM);

    grayoutif  ideqval SYSTEM_ACCESS.Access == SYSTEM_PASSWORD_USER;    
        AMT_ONEOF_AMT
    endif;


    grayoutif ideqval SETUP_DATA.Amt == 0 OR ideqval SYSTEM_ACCESS.Access == SYSTEM_PASSWORD_USER;
        AMT_CHECKBOX_AMTBX_HOTKEYPRESSED
        AMT_CHECKBOX_AMTBX_SELECTSECTION
        AMT_CHECKBOX_HIDEUNCONFIGUREDMECONFIRM
        AMT_CHECKBOX_MEBX_DEBUGMSG
        AMT_CHECKBOX_UNCONFIGUREME
        AMT_NUMERIC_AMT_WAITTIMER

#if TdtWrapper_SUPPORT
        grayoutif ideqval TDT_VOLATILE_SETUP_DATA.TdtEnroll == 1;
            AMT_ONEOF_MEDISABLED
        endif;
#else
            AMT_ONEOF_MEDISABLED
#endif
        AMT_ONEOF_ASF
        AMT_CHECKBOX_AMT_CIRAREQUEST
        AMT_ONEOF_USB_PROVISION
        AMT_ONEOF_FW_PROGRESS
    endif;

    grayoutif ideqval SETUP_DATA.AmtCiraRequest == 0 OR ideqval SETUP_DATA.Amt == 0 OR ideqval SYSTEM_ACCESS.Access == SYSTEM_PASSWORD_USER;
        AMT_NUMERIC_AMT_CIRATIMEOUT
    endif;	
    
    grayoutif ideqval SETUP_DATA.Asf == 0 OR ideqval SYSTEM_ACCESS.Access == SYSTEM_PASSWORD_USER;
        AMT_ONEOF_WATCHDOG
    endif;

    grayoutif ideqval SETUP_DATA.Asf == 0 OR ideqval SETUP_DATA.WatchDog == 0 OR ideqval SYSTEM_ACCESS.Access == SYSTEM_PASSWORD_USER;
        AMT_NUMERIC_WATCHDOG_TIMEROS
        AMTSETUP_NUMERIC_WATCHDOG_TIMERBIOS
    endif;	

    endform;
    #endif // AMT_FORM_SETUP
  #endif
#endif // ADVANCED_FORM_SET

//*************************************************************************
//*************************************************************************
//**                                                                     **
//**        (C)Copyright 1985-2010, American Megatrends, Inc.            **
//**                                                                     **
//**                       All Rights Reserved.                          **
//**                                                                     **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093           **
//**                                                                     **
//**                       Phone: (770)-246-8600                         **
//**                                                                     **
//*************************************************************************
//*************************************************************************