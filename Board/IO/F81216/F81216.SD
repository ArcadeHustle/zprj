//*************************************************************************
//*************************************************************************
//**                                                                     **
//**        (C)Copyright 1985-2011, American Megatrends, Inc.            **
//**                                                                     **
//**                       All Rights Reserved.                          **
//**                                                                     **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093           **
//**                                                                     **
//**                       Phone: (770)-246-8600                         **
//**                                                                     **
//*************************************************************************
//*************************************************************************
//
//*************************************************************************
// $Header: /Alaska/BIN/IO/Fintek/F81216_Sec/F81216.SD 5     7/04/11 3:22a Kasalinyi $
//
// $Revision: 5 $
//
// $Date: 7/04/11 3:22a $
//*************************************************************************
// Revision History
// ----------------
// $Log: /Alaska/BIN/IO/Fintek/F81216_Sec/F81216.SD $
// 
// 5     7/04/11 3:22a Kasalinyi
// [Category]  	Improvement
// [Description]  	Update to new template
// [Files]  		IO_F81216.SDL
// F81216.ASL
// F81216.MAK
// F81216.SD
// F81216.UNI
// F81216DXE.C
// F81216PEI.C
// F81216Setup.H
// F81216.CIF
// 
// 4     10/28/10 2:27a Mikes
// Implement new name rule
// 
// 3     9/06/10 3:47a Mikes
// Add MANUFACTURING flag to support manufacture mode
// 
// 2     6/02/10 9:42p Fantasylai
// 
// 1     3/31/10 5:55a Fantasylai
// Initial release to F81216 just as a second IO
// 
//*************************************************************************
//<AMI_FHDR_START>
//
// Name:  <F81216.SD>
//
// Description: SIO Form Template, Setup screen definition file
//
//<AMI_FHDR_END>
//*************************************************************************

#ifdef SETUP_DATA_DEFINITION
/***********************************************************/
/* Put NVRAM data definitions here.
/* For example:    UINT8 Data1;
/* These definitions will be converted by the build process
/* to a definitions of SETUP_DATA fields.
/***********************************************************/
#endif //SETUP_DATA_DEFINITION

//-------------------------------------------------------------------------
//Select Top level menu itmem (forset) for you pages
//-------------------------------------------------------------------------
#ifdef ADVANCED_FORM_SET

//-------------------------------------------------------------------------
//If you need any additional type definitions add them here
//-------------------------------------------------------------------------
#ifdef FORM_SET_TYPEDEF
    #include "F81216Setup.H"
    #include "Token.h"
#endif

//-------------------------------------------------------------------------
//If you need custom varstore's define them here
//-------------------------------------------------------------------------
#ifdef FORM_SET_VARSTORE

    //Callback varstore control in first io

    #ifdef SETUP_DATA_DEFINITION
    AUTO_ID(COMA2_V_DATA_KEY)
    AUTO_ID(COMA2_NV_DATA_KEY)
    AUTO_ID(COMB2_V_DATA_KEY)
    AUTO_ID(COMB2_NV_DATA_KEY)
    AUTO_ID(COMC2_V_DATA_KEY)
    AUTO_ID(COMC2_NV_DATA_KEY)
    AUTO_ID(COMD2_V_DATA_KEY)
    AUTO_ID(COMD2_NV_DATA_KEY)
    #endif

    #if F81216SEC_SERIAL_PORT0_PRESENT
    AMI_SIO_VARSTORE(COMA2, PNP0501_10)
    #endif

    #if F81216SEC_SERIAL_PORT1_PRESENT    
    AMI_SIO_VARSTORE(COMB2, PNP0501_11)
    #endif

    #if F81216SEC_SERIAL_PORT2_PRESENT
    AMI_SIO_VARSTORE(COMC2, PNP0501_12)
    #endif

    #if F81216SEC_SERIAL_PORT3_PRESENT
    AMI_SIO_VARSTORE(COMD2, PNP0501_13)
    #endif

#endif

//-------------------------------------------------------------------------
//Define controls to be added to the top level page of the formset
//-------------------------------------------------------------------------
#ifdef FORM_SET_ITEM
#endif

//-------------------------------------------------------------------------
//Define goto commands for the forms defined in this file
//-------------------------------------------------------------------------
#ifdef FORM_SET_GOTO
    goto F81216SEC_FORM_ID,
    prompt  = STRING_TOKEN(STR_F81216SEC_SIO_FORM),
    help    = STRING_TOKEN(STR_F81216SEC_SIO_FORM_HELP);

#endif

//-------------------------------------------------------------------------
// Define forms
//-------------------------------------------------------------------------
#ifdef FORM_SET_FORM
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////Define SIO formset form////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    form formid = AUTO_ID(F81216SEC_FORM_ID),
        title = STRING_TOKEN(STR_F81216SEC_SIO_FORM);
        SUBTITLE(STRING_TOKEN(STR_F81216SEC_SIO_FORM))
    
    SEPARATOR

        text
        help   = STRING_TOKEN(STR_F81216SEC_SIO_FORM_HELP),
        text   = STRING_TOKEN(STR_F81216SEC_SIO_PROMPT),
        text   = STRING_TOKEN(STR_F81216SEC),
        flags  = 0,
        key    = 0;

        //Goto Serial 0 Form
        #if F81216SEC_SERIAL_PORT0_PRESENT
        suppressif ideqval COMA2_V_DATA.DevImplemented == 0x00;
            goto F81216SEC_SERIAL1_FORM_ID,
            prompt  = STRING_TOKEN(STR_F81216SEC_SERIAL0_FORM),
            help    = STRING_TOKEN(STR_F81216SEC_SERIAL0_FORM_HELP);
        endif;
        #endif
    
        //Goto Serial 1 Form
        #if F81216SEC_SERIAL_PORT1_PRESENT
        suppressif ideqval COMB2_V_DATA.DevImplemented == 0x00;
            goto F81216SEC_SERIAL2_FORM_ID,
            prompt  = STRING_TOKEN(STR_F81216SEC_SERIAL1_FORM),
            help    = STRING_TOKEN(STR_F81216SEC_SERIAL1_FORM_HELP);
        endif;
        #endif
    
        //Goto Serial 2 Form
        #if F81216SEC_SERIAL_PORT2_PRESENT
        suppressif ideqval COMC2_V_DATA.DevImplemented == 0x00;
            goto F81216SEC_SERIAL3_FORM_ID,
            prompt  = STRING_TOKEN(STR_F81216SEC_SERIAL2_FORM),
            help    = STRING_TOKEN(STR_F81216SEC_SERIAL2_FORM_HELP);
        endif;
        #endif
    
        //Goto Serial 3 Form
        #if F81216SEC_SERIAL_PORT3_PRESENT
        suppressif ideqval COMD2_V_DATA.DevImplemented == 0x00;
            goto F81216SEC_SERIAL4_FORM_ID,
            prompt  = STRING_TOKEN(STR_F81216SEC_SERIAL3_FORM),
            help    = STRING_TOKEN(STR_F81216SEC_SERIAL3_FORM_HELP);
        endif;
        #endif

endform;//SIO Form

    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////Define SP0 formset form////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    #if F81216SEC_SERIAL_PORT0_PRESENT
    form formid = AUTO_ID(F81216SEC_SERIAL1_FORM_ID),
        title = STRING_TOKEN(STR_F81216SEC_SERIAL0_FORM);
        SUBTITLE(STRING_TOKEN(STR_F81216SEC_SERIAL0_FORM))
    
    SEPARATOR

        checkbox varid    = COMA2_NV_DATA.DevEnable,
            prompt    = STRING_TOKEN(STR_F81216SEC_SERIAL_PROMPT),
            help    = STRING_TOKEN(STR_F81216SEC_SERIAL_PROMPT_HELP),
            flags    = 1 | RESET_REQUIRED, 
        endcheckbox;
    
        suppressif ideqval COMA2_NV_DATA.DevEnable == 0x00;
            text
            help   = STRING_TOKEN(STR_F81216SEC_SERIAL_PROMPT_HELP),
            text   = STRING_TOKEN(STR_CURRENT_CONFIG),
            text   = STRING_TOKEN(STR_F81216SEC_SERIAL0_CONFIG_VALUE),
            flags  = 0,
            key    = 0;
        endif;    // suppressif SIO_SETUP_VAR.COMA2Enable == 0x00;
    
    SEPARATOR

        suppressif ideqval COMA2_NV_DATA.DevEnable == 0x00;
            oneof varid = COMA2_NV_DATA.DevPrsId,
                prompt      = STRING_TOKEN(STR_CHANGE_CONFIG),
                help        = STRING_TOKEN(STR_SETTINGS_HELP),
                option text = STRING_TOKEN(STR_AUTO), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL0_SETTINGS1), value = 1, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_SETTINGS2), value = 2, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_SETTINGS3), value = 3, flags = RESET_REQUIRED;
//                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_SETTINGS4), value = 4, flags = RESET_REQUIRED;
//                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_SETTINGS5), value = 5, flags = RESET_REQUIRED;
            endoneof;
        endif;    // suppressif SIO_SETUP_VAR.COMA2Enable == 0x00;

//        suppressif ideqval COMA2_NV_DATA.DevEnable == 0x00;
        suppressif TRUE;
            oneof varid = COMA2_NV_DATA.DevMode,
                prompt      = STRING_TOKEN(STR_SELECT_MODE),
                help        = STRING_TOKEN(STR_F81216SEC_SERIAL_MODE_HELP),
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_MODE1), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_MODE2), value = 1, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_MODE3), value = 2, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_MODE4), value = 3, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_MODE5), value = 4, flags = RESET_REQUIRED;
        endoneof;
        endif;    // suppressif SIO_SETUP_VAR.COMA2Enable == 0x00;
    endform;  //Serial 0 Form
    #endif
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////Define SP1 formset form////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    #if F81216SEC_SERIAL_PORT1_PRESENT
    form formid = AUTO_ID(F81216SEC_SERIAL2_FORM_ID),
        title = STRING_TOKEN(STR_F81216SEC_SERIAL1_FORM);
        SUBTITLE(STRING_TOKEN(STR_F81216SEC_SERIAL1_FORM))
    
        SEPARATOR
    
        checkbox varid    = COMB2_NV_DATA.DevEnable,
            prompt    = STRING_TOKEN(STR_F81216SEC_SERIAL_PROMPT),
            help    = STRING_TOKEN(STR_F81216SEC_SERIAL_PROMPT_HELP),
            flags    = 1 | RESET_REQUIRED, 
        endcheckbox;
    
        suppressif ideqval COMB2_NV_DATA.DevEnable == 0x00;
            text
            help   = STRING_TOKEN(STR_F81216SEC_SERIAL_PROMPT_HELP),
            text   = STRING_TOKEN(STR_CURRENT_CONFIG),
            text   = STRING_TOKEN(STR_F81216SEC_SERIAL1_CONFIG_VALUE),
            flags  = 0,
            key    = 0;
        endif;    // suppressif SIO_SETUP_VAR.COMB2Enable == 0x00;
    
        SEPARATOR
    
        suppressif ideqval COMB2_NV_DATA.DevEnable == 0x00;
            oneof varid = COMB2_NV_DATA.DevPrsId,
                prompt      = STRING_TOKEN(STR_CHANGE_CONFIG),
                help        = STRING_TOKEN(STR_SETTINGS_HELP),
                option text = STRING_TOKEN(STR_AUTO), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL1_SETTINGS1), value = 1, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_SETTINGS2), value = 2, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_SETTINGS3), value = 3, flags = RESET_REQUIRED;
//                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_SETTINGS4), value = 4, flags = RESET_REQUIRED;
//                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_SETTINGS5), value = 5, flags = RESET_REQUIRED;
            endoneof;
        endif;    // suppressif SIO_SETUP_VAR.COMB2Enable == 0x00;
    
    endform;  // Serial 1 Form
    #endif
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////Define SP2 formset form////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    #if F81216SEC_SERIAL_PORT2_PRESENT
    form formid = AUTO_ID(F81216SEC_SERIAL3_FORM_ID),
        title = STRING_TOKEN(STR_F81216SEC_SERIAL2_FORM);
        SUBTITLE(STRING_TOKEN(STR_F81216SEC_SERIAL2_FORM))
    
        SEPARATOR
    
        checkbox varid    = COMC2_NV_DATA.DevEnable,
            prompt    = STRING_TOKEN(STR_F81216SEC_SERIAL_PROMPT),
            help    = STRING_TOKEN(STR_F81216SEC_SERIAL_PROMPT_HELP),
            flags    = 1 | RESET_REQUIRED, 
        endcheckbox;
    
        suppressif ideqval COMC2_NV_DATA.DevEnable == 0x00;
            text
            help   = STRING_TOKEN(STR_F81216SEC_SERIAL_PROMPT_HELP),
            text   = STRING_TOKEN(STR_CURRENT_CONFIG),
            text   = STRING_TOKEN(STR_F81216SEC_SERIAL2_CONFIG_VALUE),
            flags  = 0,
            key    = 0;
        endif;    // suppressif SIO_SETUP_VAR.COMC2Enable == 0x00;
    
        SEPARATOR
    
        suppressif ideqval COMC2_NV_DATA.DevEnable == 0x00;
            oneof varid = COMC2_NV_DATA.DevPrsId,
                prompt      = STRING_TOKEN(STR_CHANGE_CONFIG),
                help        = STRING_TOKEN(STR_SETTINGS_HELP),
                option text = STRING_TOKEN(STR_AUTO), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL2_SETTINGS1), value = 1, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_SETTINGS2), value = 2, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_SETTINGS3), value = 3, flags = RESET_REQUIRED;
//                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_SETTINGS4), value = 4, flags = RESET_REQUIRED;
//                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_SETTINGS5), value = 5, flags = RESET_REQUIRED;
            endoneof;
        endif;    // suppressif SIO_SETUP_VAR.COMC2Enable == 0x00;
    
    endform;  // Serial 2 Form
    #endif
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////Define SP3 formset form////////////////////////////////////////
    ////////////////////////////////////////////////////////////////////////////////////////////////////////
    #if F81216SEC_SERIAL_PORT3_PRESENT
    form formid = AUTO_ID(F81216SEC_SERIAL4_FORM_ID),
        title = STRING_TOKEN(STR_F81216SEC_SERIAL3_FORM);
        SUBTITLE(STRING_TOKEN(STR_F81216SEC_SERIAL3_FORM))
    
        SEPARATOR
    
        checkbox varid    = COMD2_NV_DATA.DevEnable,
            prompt    = STRING_TOKEN(STR_F81216SEC_SERIAL_PROMPT),
            help    = STRING_TOKEN(STR_F81216SEC_SERIAL_PROMPT_HELP),
            flags    = 1 | RESET_REQUIRED, 
        endcheckbox;
    
        suppressif ideqval COMD2_NV_DATA.DevEnable == 0x00;
            text
            help   = STRING_TOKEN(STR_F81216SEC_SERIAL_PROMPT_HELP),
            text   = STRING_TOKEN(STR_CURRENT_CONFIG),
            text   = STRING_TOKEN(STR_F81216SEC_SERIAL3_CONFIG_VALUE),
            flags  = 0,
            key    = 0;
        endif;    // suppressif SIO_SETUP_VAR.COMD2Enable == 0x00;
    
        SEPARATOR
    
        suppressif ideqval COMD2_NV_DATA.DevEnable == 0x00;
            oneof varid = COMD2_NV_DATA.DevPrsId,
                prompt      = STRING_TOKEN(STR_CHANGE_CONFIG),
                help        = STRING_TOKEN(STR_SETTINGS_HELP),
                option text = STRING_TOKEN(STR_AUTO), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL3_SETTINGS1), value = 1, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_SETTINGS2), value = 2, flags = RESET_REQUIRED;
                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_SETTINGS3), value = 3, flags = RESET_REQUIRED;
//                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_SETTINGS4), value = 4, flags = RESET_REQUIRED;
//                option text = STRING_TOKEN(STR_F81216SEC_SERIAL_SETTINGS5), value = 5, flags = RESET_REQUIRED;
            endoneof;
        endif;    // suppressif SIO_SETUP_VAR.COMD2Enable == 0x00;
    
    endform;  // Serial 3 Form
    #endif

#endif //FORM_SET_FORM

#endif//ADVANCED_FORM_SET

//*************************************************************************
//*************************************************************************
//**                                                                     **
//**        (C)Copyright 1985-2011, American Megatrends, Inc.            **
//**                                                                     **
//**                       All Rights Reserved.                          **
//**                                                                     **
//**      5555 Oakbrook Parkway, Suite 200, Norcross, GA 30093           **
//**                                                                     **
//**                       Phone: (770)-246-8600                         **
//**                                                                     **
//*************************************************************************
//*************************************************************************
